// CacheItem implementation of CacheItemInterface doesn't have the exact structure in terms of return type
// and the psalm analyzer fails early with this error:
// PHP Fatal error:  Declaration of Doctrine\Common\Cache\Psr6\CacheItem::get() must be compatible
// with Psr\Cache\CacheItemInterface::get(): mixed in nextcloud/master/3rdparty/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheItem.php on line 51
// So the class CacheItem is stubbed

<?php

declare(strict_types=1);

/**
 * SPDX-FileCopyrightText: 2024 Jankari Tech Pvt. Ltd.
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */

namespace Doctrine\Common\Cache\Psr6 {
	use Psr\Cache\CacheItemInterface;

	class CacheItem implements CacheItemInterface
	{
		public function getKey(): string
		{
		}

		public function get(): mixed
		{
		}

		public function isHit(): bool
		{
		}

		public function set($value): self
		{
		}

		public function expiresAt($expiration): self
		{
		}

		public function expiresAfter($time): self
		{
		}

		public function getExpiry(): ?float
		{
		}
	}
}
