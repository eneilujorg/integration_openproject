version: '3'

services:

  # Proxy for ssl termination and easier hostname access
  # SSL certificates with the virtual host name need to be added to ./data/ssl
  proxy:
    image: ghcr.io/juliushaertl/nextcloud-dev-nginx:latest
    ports:
      - "${PROXY_PORT_HTTP:-80}:80"
      - "${PROXY_PORT_HTTPS:-443}:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /home/runner/work/integration_openproject/integration_openproject/server/apps/integration_openproject/ci/data/ssl:/etc/nginx/certs
    environment:
      DHPARAM_BITS: 2048
      DHPARAM_GENERATION: "false"
      HTTPS_METHOD: "noredirect"
      HSTS: "off"
    cap_add:
      - SYS_ADMIN
    networks:
      default:
        aliases:
          - nextcloud.local

  nextcloud:
    image: ghcr.io/juliushaertl/nextcloud-dev-php${PHP_VERSION:-81}:latest
    environment:
      SQL: ${SQL:-mysql}
      NEXTCLOUD_AUTOINSTALL: "YES"
      NEXTCLOUD_AUTOINSTALL_APPS:
      WITH_REDIS: "YES"
      VIRTUAL_HOST: "nextcloud.local"
      ADDITIONAL_APPS_PATH:
      NEXTCLOUD_TRUSTED_DOMAINS:
      PRIMARY: ${PRIMARY}
      PHP_XDEBUG_MODE: ${PHP_XDEBUG_MODE:-develop}
    volumes:
      - '${STABLE_ROOT_PATH}:/var/www/html'
      - '${STABLE_ROOT_PATH}/apps-extra:/var/www/html/apps-extra'
      - /var/www/html/data
      - /var/www/html/config
      - /var/www/html/apps-writable
    depends_on:
      - ${DB_SERVICE:-database-mysql}
      - redis
      - proxy
    extra_hosts:
      - host.docker.internal:host-gateway
    healthcheck:
      test: curl -f http://nextcloud.local/status.php || exit 1
      interval: 30s
      timeout: 30s
      retries: 5

  database-mysql:
    image: mariadb:10.6
    environment:
      MYSQL_ROOT_PASSWORD: 'nextcloud'
      MYSQL_PASSWORD: 'nextcloud'
      MYSQL_USER: 'nextcloud'
      MYSQL_DATABASE: 'nextcloud'
    ports:
      - "${PORTBASE:-800}2:3306"
    volumes:
      - mysql:/var/lib/mysql

  database-postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: nextcloud
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - postgres:/var/lib/postgresql

  redis:
    image: redis:7

  openproject:
    image: openproject/community:13
    environment:
      OPENPROJECT_SECRET_KEY_BASE: "secret"
      OPENPROJECT_HOST__NAME: "host.docker.internal:3000"
      OPENPROJECT_DEV_EXTRA_HOSTS: "host.docker.internal"
      OPENPROJECT_HTTPS: false
      OPENPROJECT_PASSWORD__MIN__LENGTH: 0
      OPENPROJECT_ONBOARDING__ENABLED: false
      OPENPROJECT_AUTHENTICATION_GLOBAL__BASIC__AUTH_USER: "apiadmin"
      OPENPROJECT_AUTHENTICATION_GLOBAL__BASIC__AUTH_PASSWORD: "apiadmin"
      CI: true
    ports:
      - "3000:80"
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - /home/runner/work/integration_openproject/integration_openproject/server/apps/integration_openproject/ci/data/ssl:/usr/local/share/ca-certificates
    healthcheck:
      test: curl -f http://host.docker.internal:3000/status.php || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
#    command: ["sh", "-c", "sudo update-ca-certificates && exec ./docker/prod/supervisord"]

#  start_dependencies:
#    image: dadarek/wait-for-dependencies
#    depends_on:
#      - proxy
#      - openproject
#    command: proxy:443 proxy:80 openproject:80

volumes:
  data:
  config:
  mysql:
  postgres:

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET:-192.168.21.0/24}
